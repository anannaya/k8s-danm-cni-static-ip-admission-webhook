########################################################
# k8s-danm-cni-static-ip-controller Deployment
########################################################
# k8s-danm-cni-static-ip-controller  need to be TLS enabled, Please create a cert/key pair and upload to k8s secret
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: k8s-danm-cni-static-ip-controller
  name: k8s-danm-cni-static-ip-controller
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-danm-cni-static-ip-controller
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: k8s-danm-cni-static-ip-controller
    spec:
      serviceAccountName: k8s-danm-cni-static-ip-controller
      terminationGracePeriodSeconds: 0
      tolerations:
      - key: 'is_control'
        operator: 'Equal'
        value: 'true'
        effect: 'NoExecute'
      nodeSelector:
        "is_control": "true"
      containers:
      - name: k8s-danm-cni-static-ip-controller
        imagePullPolicy: Always
        resources:
          requests:
            memory: 128Mi
            cpu: 100m
          limits:
            memory: 512Mi
            cpu: 500m
        image: dockerregistry.ims.nokia.com:6000/nokia/imsdev/k8s-danm-cni-static-ip-controller-master:290319
        args:
        - --admitAll=false
        - --keyFile=/etc/webhook/certs/key.pem
        - --certFile=/etc/webhook/certs/cert.pem
        - --clientAuth=false
        - --logFile=/var/log/k8s-danm-cni-static-ip-controller.log
        - --logLevel=info
        - --port=443
        command:
        - /k8s-danm-cni-static-ip-controller-master
        ports:
          - containerPort: 443
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        readinessProbe:
          httpGet:
            path: /status.html
            port: 443
            scheme: HTTPS
          initialDelaySeconds: 10
          timeoutSeconds: 2
        volumeMounts:
        - name: webhook-certs
          mountPath: /etc/webhook/certs
          readOnly: true
      volumes:
      - name: webhook-certs
        secret:
          secretName: admission-webhook-example-certs
